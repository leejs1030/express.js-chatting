extends ../layout.pug

block title
    | #{channelName}

block references
    link(rel='stylesheet',
             href='/styles/myScroll.css')
    script(src='/scripts/myScroll.js', defer)
    script(src='/socket.io/socket.io.js')
    script(src='/scripts/chattingsockets.js', defer)
    script(src='/scripts/unreadmsg.js', defer)

block scripts
    script(type = 'text/javascript').
        const clientO = {
            id: '#{user.id}',
            nick: '#{user.nick}',
            channel: '#{channelId}'
        };
        const sendWithEnter = #{send_enter};
        const msglist = document.getElementById('botScroll');
        let initialMsgs = !{initialMsgs};
        let insertPos = #{unread};
        let readPos = initialMsgs.length;
        let newUnread = 0;
        const msgPerPage = 20;
        const botbtn = document.getElementById('botbtn');
        const msgElement = (clientO, msg) => {
            //- console.log(msg);
            let newMsg = document.createElement('span');
            if(clientO.id == msg.id){
                newMsg.innerHTML = (`<div class="list-group-item mb-0"><div class="text-danger font-weight-bold h5">${msg.id}(${msg.nick}):</div><div id="pre-wrap">${msg.msg}</div></div><span class="float-right text-right mb-2 h6">${msg.msg_date}에 전송됨</span>`);
            }
            else{
                newMsg.innerHTML = (`<div class="list-group-item mb-0"><div class="text-info">${msg.id}(${msg.nick}):</div><div id="pre-wrap">${msg.msg}</div></div><span class="float-right text-right mb-2 h6">${msg.msg_date}에 전송됨</span>`);
            }
            return newMsg;
        };


block content
    .container.mt-3
        .row
            .h3.col-5
                a(href='/channels') 목록으로
            .h4.col-7
                a.btn.btn-secondary(href=`/channels/${channelId}/members`) 멤버 목록
                a.btn.btn-secondary.float-right.text-right(href=`/channels/${channelId}/invitelist`) 친구 초대
                //- need to change. get --> put
            //- .h4.float-right.text-right
                
    .container.mt-3.position-relative
        .position-absolute(style='right:33px;bottom:3px;z-index:1;')
            button#botbtn.invisible
                span#count-new-msg 0
                |  메시지
            //- it will use later. scroll-down button. become visible when new message arrive.
        #botScroll.list-group.overflow-scroll
            //- each e in msglist
            //-     span
                    //- .list-group-item.mb-0
                    //-     if e.id == user.id
                    //-         .text-danger.font-weight-bold.h5
                    //-             | #{e.id}(#{e.nick}):
                    //-     else
                    //-         .text-info
                    //-             | #{e.id}(#{e.nick}):
                    //-     #pre-wrap
                    //-         | #{e.msg}
                    //- span.float-right.text-right.mb-2.h6
                    //-     | #{e.msg_date}에 전송됨
    .container.hidden-xs.hidden-sm.sticky
        h2.mb-4
            form(method='POST' id='myPost' action='/#')
                textarea.form-control(name='content' id = 'input-msg' autofocus)
                input(type='hidden' name='_csrf' value=csrfToken)
                input.btn.btn-primary.mr-5(type = 'submit' value = 'send' id = 'sendchat')
                //-  action=`/channels/${channelId}`
    
